esphome:
  name: office-esp32

esp32:
  board: esp-wrover-kit
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Office-Esp32 Fallback Hotspot"
    password: !secret ap_password

captive_portal:

esp32_camera:
  name: ESP32 Cam
  external_clock:
    pin: GPIO21
    frequency: 20MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO4, GPIO5, GPIO18, GPIO19, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  max_framerate: 24 fps

esp32_camera_web_server:
  - port: 8080
    mode: stream
  - port: 8081
    mode: snapshot

binary_sensor:
  - platform: gpio
    pin: 13
    name: "Green Button"
    filters:
      - invert
  - platform: gpio
    pin: 32
    name: "Red Button"
    filters:
      - invert
      
sensor:
  - platform: adc
    pin: 33
    name: "Potentiometer"
    attenuation: auto
    update_interval: 0.5s

# output:
#   - platform: ledc
#     pin: GPIO13
#     id: buzzer

# rtttl:
#   output: buzzer
#   on_finished_playback:
#     - logger.log: 'Song ended!'

# api:
#   services:
#     - service: play_rtttl
#       variables:
#         song_str: string
#       then:
#         - rtttl.play:
#             rtttl: !lambda 'return song_str;'